'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}

function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}

function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

function urlStringifier(object) {
  const params = new URLSearchParams(object);
  for (const [key, value] of Object.entries(object)) {
    if (Array.isArray(value)) {
      params.delete(key);
      value.filter(Boolean).forEach(v => params.append(key, v));
    }
  }
  return params.toString();
}
function stringifyURLString(object, stringifier = urlStringifier) {
  return urlStringifier(object);
}
function isDefined(value) {
  return typeof value !== 'undefined' && value !== null;
}
function cleanObject(obj) {
  return Object.keys(obj).reduce((result, key) => {
    const value = obj[key];
    if (Array.isArray(value)) {
      const values = value.filter(isDefined);
      if (!values.length) {
        return result;
      }
      return {
        ...result,
        [key]: values
      };
    }
    if (isDefined(value)) {
      return {
        ...result,
        [key]: value
      };
    }
    return result;
  }, {});
}
function formatQueryString(variableMap) {
  const map = cleanObject(variableMap);
  const result = stringifyURLString(map);
  if (result === '') {
    return '';
  }
  return `?${result}`;
}
function buildRelativeUri(commonRequest) {
  const pathMap = commonRequest.pathVariables;
  var uri = commonRequest.uriTemplate;
  for (const param in pathMap) {
    uri = uri.replace(`{${param}}`, `${pathMap[param]}`);
  }
  const resQuery = formatQueryString(commonRequest.queryParams || {});
  return `${uri}${resQuery}`;
}

class ApiRequest {
  constructor(request, requestExecutor) {
    this.requestExecutor = requestExecutor;
    _defineProperty(this, "request", void 0);
    this.request = {
      ...request,
      uri: buildRelativeUri(request)
    };
  }
  clientRequest() {
    return this.request;
  }
  execute() {
    return this.requestExecutor(this.request);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCategoriesImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a request for creating new Categories or updating existing ones.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/categories/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCategoriesImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyCategoriesImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCategoriesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyCategoriesImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a request for creating new Customers or updating existing ones.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyCustomersImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyCustomersImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyImportContainersByImportContainerKeyImportOperationsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves all [ImportOperations](ctp:import:type:ImportOperation) of a given ImportContainer key.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/import-containers/{importContainerKey}/import-operations',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyImportContainersByImportContainerKeyImportSummariesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves an [ImportSummary](ctp:import:type:ImportSummary) for the given import container. An [ImportSummary](ctp:import:type:ImportSummary) is calculated on demand.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/import-containers/{importContainerKey}/import-summaries',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importSummaries() {
    return new ByProjectKeyImportContainersByImportContainerKeyImportSummariesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  importOperations() {
    return new ByProjectKeyImportContainersByImportContainerKeyImportOperationsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	Updates the import container given by the key.
   */
  put(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'PUT',
      uriTemplate: '/{projectKey}/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Retrieves the import container given by the key.
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
  /**
   *	Deletes the import container given by the key.
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	Creates a new import container.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/import-containers',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Retrieves all import containers of a given project key.
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/import-containers',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyImportOperationsByIdRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the [ImportOperation](ctp:import:type:ImportOperation) of a given ID.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/import-operations/{id}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyImportOperationsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withIdValue(childPathArgs) {
    return new ByProjectKeyImportOperationsByIdRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInventoriesImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a request for creating new Inventories or updating existing ones.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/inventories/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInventoriesImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyInventoriesImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInventoriesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyInventoriesImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrderPatchesImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a new import request for order patches
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/order-patches/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrderPatchesImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyOrderPatchesImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrderPatchesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyOrderPatchesImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a request for creating new Orders.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyOrdersImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyOrdersImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyPricesImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a request for creating new Prices or updating existing ones.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/prices/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyPricesImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyPricesImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyPricesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyPricesImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductDraftsImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a request for creating new ProductDrafts or updating existing ones.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-drafts/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductDraftsImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyProductDraftsImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductDraftsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyProductDraftsImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductTypesImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a request for creating new ProductTypes or updating existing ones.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-types/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductTypesImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyProductTypesImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductTypesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyProductTypesImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductVariantPatchesImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a new import request for product variant patches
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-variant-patches/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductVariantPatchesImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyProductVariantPatchesImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductVariantPatchesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyProductVariantPatchesImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductVariantsImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a request for creating new ProductVariants or updating existing ones.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-variants/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductVariantsImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyProductVariantsImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductVariantsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyProductVariantsImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductsImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a request for creating new Products or updating existing ones.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/products/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductsImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyProductsImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyProductsImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStandalonePricesImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a request for creating new Standalone Prices or updating existing ones.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/standalone-prices/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStandalonePricesImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyStandalonePricesImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStandalonePricesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyStandalonePricesImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyTypesImportContainersByImportContainerKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a request for creating new Type or updating existing ones.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/types/import-containers/{importContainerKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyTypesImportContainersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withImportContainerKeyValue(childPathArgs) {
    return new ByProjectKeyTypesImportContainersByImportContainerKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyTypesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyTypesImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importContainers() {
    return new ByProjectKeyImportContainersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  importOperations() {
    return new ByProjectKeyImportOperationsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  categories() {
    return new ByProjectKeyCategoriesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  prices() {
    return new ByProjectKeyPricesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  standalonePrices() {
    return new ByProjectKeyStandalonePricesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  products() {
    return new ByProjectKeyProductsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  productDrafts() {
    return new ByProjectKeyProductDraftsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  productTypes() {
    return new ByProjectKeyProductTypesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  productVariants() {
    return new ByProjectKeyProductVariantsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  productVariantPatches() {
    return new ByProjectKeyProductVariantPatchesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  orders() {
    return new ByProjectKeyOrdersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  orderPatches() {
    return new ByProjectKeyOrderPatchesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  customers() {
    return new ByProjectKeyCustomersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  inventories() {
    return new ByProjectKeyInventoriesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  types() {
    return new ByProjectKeyTypesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

class ApiRoot {
  constructor(args) {
    _defineProperty(this, "executeRequest", void 0);
    _defineProperty(this, "baseUri", void 0);
    this.executeRequest = args.executeRequest;
    this.baseUri = args.baseUri || 'https://import.europe-west1.gcp.commercetools.com';
  }
  withProjectKeyValue(childPathArgs) {
    return new ByProjectKeyRequestBuilder({
      pathArgs: {
        ...childPathArgs
      },
      executeRequest: this.executeRequest,
      baseUri: this.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

const createExecutorFromMiddlewares = (executor, midds) => {
  if (!midds || midds.length == 0) {
    return executor;
  }
  const reduced = midds.reduce(reduceMiddleware);
  return middlewareToExecutor(reduced, executor);
};
function reduceMiddleware(middleware1, middleware2) {
  return (request, executor) => middleware1(request, middlewareToExecutor(middleware2, executor));
}
function middlewareToExecutor(middleware, executor) {
  return request => middleware(request, executor);
}

function createApiBuilderFromCtpClient(ctpClient, baseUri) {
  return new ApiRoot({
    executeRequest: ctpClient.execute,
    baseUri: baseUri
  });
}

exports.ApiRoot = ApiRoot;
exports.createApiBuilderFromCtpClient = createApiBuilderFromCtpClient;
exports.createExecutorFromMiddlewares = createExecutorFromMiddlewares;
